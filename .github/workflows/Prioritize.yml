# replace .war with .jar or .ear if needed
name: Whitesource Prioritize Java with Maven

on: workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: zendesk/checkout@v2
        with:
          fetch-depth: '1'
      - name: Set up QEMU
        run: |-
          QEMU_IMAGE=tonistiigi/binfmt:latest
          docker pull $QEMU_IMAGE
          docker image inspect $QEMU_IMAGE
          docker run --rm --privileged $QEMU_IMAGE --install all
      - name: Set up Docker Buildx
        id: buildx
        uses: zendesk/setup-buildx-action@v1.6.0
        with:
          install: true
      - name: Docker Build and push
        run: |-
          set -eu -o pipefail
          echo ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} | docker login --username=${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin
          set -x
          current_tag=zendesk/maxwell:"${GITHUB_REF##refs/tags/}"
          latest_tag=zendesk/maxwell:latest
          docker buildx build --platform=linux/arm64,linux/amd64 --file=Dockerfile --push --tag="$current_tag" --tag="$latest_tag" .
          
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Build with Maven
        run: mvn clean install -DskipTests=true
      - name: WhiteSource Unified Agent Scan
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          WS_APIKEY: ${{secrets.APIKEY}}
          WS_USERKEY: ${{secrets.USERKEY}}
          WS_WSS_URL: https://app.whitesourcesoftware.com/agent
          WS_PRODUCTNAME: GH_${{github.event.repository.name}}
          WS_PROJECTNAME: ${{github.ref}}_Prioritize
          WS_ENABLEIMPACTANALYSIS: true
          WS_REQUIREKNOWNSHA1: false
          WS_RESOLVEALLDEPENDENCIES: false
          WS_MAVEN_RESOLVEDEPENDENCIES: true
          WS_MAVEN_AGGREGATEMODULES: true
          WS_FILESYSTEMSCAN: false
          WS_GENERATEPROJECTDETAILSJSON: true
        run: |
          curl -LJO https://unified-agent.s3.amazonaws.com/wss-unified-agent.jar
          echo Unified Agent downloaded successfully
          WARFILE=$(find ./ -type f -wholename "*/target/*.jar")
          echo $WARFILE will be added to appPath
          java -jar wss-unified-agent.jar -appPath $WARFILE -d ./
